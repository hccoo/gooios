// <auto-generated />
using Gooios.PaymentService.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Gooios.PaymentService.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("Gooios.PaymentService.Domains.Aggregates.WeChatAppConfiguration", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("AppId")
                        .IsRequired()
                        .HasColumnName("app_id")
                        .HasMaxLength(80);

                    b.Property<string>("AppSecret")
                        .IsRequired()
                        .HasColumnName("app_secret")
                        .HasMaxLength(80);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("created_on");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnName("key")
                        .HasMaxLength(80);

                    b.Property<string>("MchId")
                        .IsRequired()
                        .HasColumnName("mch_id")
                        .HasMaxLength(80);

                    b.Property<string>("NotifyUrl")
                        .IsRequired()
                        .HasColumnName("notify_url")
                        .HasMaxLength(200);

                    b.Property<string>("OrganizationId")
                        .IsRequired()
                        .HasColumnName("organization_id")
                        .HasMaxLength(80);

                    b.Property<string>("SslCertPassword")
                        .IsRequired()
                        .HasColumnName("sslcert_password")
                        .HasMaxLength(80);

                    b.Property<string>("SslCertPath")
                        .IsRequired()
                        .HasColumnName("sslcert_path")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("wechat_app_configurations");
                });

            modelBuilder.Entity("Gooios.PaymentService.Domains.Aggregates.WeChatPaymentNotifyMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("created_on");

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasColumnName("message_content");

                    b.Property<string>("NotifyApiName")
                        .IsRequired()
                        .HasColumnName("notify_api_name")
                        .HasMaxLength(80);

                    b.HasKey("Id");

                    b.ToTable("wechat_payment_notify_messages");
                });
#pragma warning restore 612, 618
        }
    }
}
